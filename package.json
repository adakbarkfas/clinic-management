// package.json
{
  "name": "clinic-management",
  "version": "1.0.0",
  "description": "Clinic Management System",
  "main": "server.js",
  "scripts": {
    "start": "node server.js"
  },
  "dependencies": {
    "express": "^4.18.2",
    "pg": "^8.11.3",
    "ejs": "^3.1.9",
    "dotenv": "^16.3.1"
  }
}

// server.js
require('dotenv').config();
const express = require('express');
const { Pool } = require('pg');
const path = require('path');

const app = express();

app.use(express.json());
app.use(express.urlencoded({ extended: true }));
app.use(express.static('public'));
app.set('view engine', 'ejs');

const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: {
    rejectUnauthorized: false
  }
});

app.get('/', (req, res) => {
  res.render('index');
});

// Patient Registration
app.post('/api/patients', async (req, res) => {
  const { civil_id, first_name, last_name, phone_number } = req.body;
  try {
    const result = await pool.query(
      `INSERT INTO patients (civil_id, first_name, last_name, phone_number, first_visit_date) 
       VALUES ($1, $2, $3, $4, CURRENT_DATE) RETURNING *`,
      [civil_id, first_name, last_name, phone_number]
    );
    res.json(result.rows[0]);
  } catch (err) {
    res.status(500).json({ error: err.message });
  }
});

// Get Patients
app.get('/api/patients', async (req, res) => {
  try {
    const result = await pool.query('SELECT * FROM patients ORDER BY first_visit_date DESC');
    res.json(result.rows);
  } catch (err) {
    res.status(500).json({ error: err.message });
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
});
